=begin
#PORTA

## About PORTA  Musement's **PORTA** (*Perfect Open Road To Activities*) service allows suppliers to manage their experiences via API.  # Authentication  <SecurityDefinitions />  # Release notes  This section contains a record of changes to the API.  ## 2023-12-06  * Added `unconfirmed` property to booking cancellation request webhook  ## 2023-10-12  * Added `vendor_id` query parameter to the endpoint `GET /supplier/catalog/experiences`  * Filters results to those which belong to the specified vendor  ## 2023-10-02  * Added `ticket_numbers` and `transaction_id` properties to booking cancellation request webhook  ## 2023-08-24  * Changed `accept-version` header value used for webhook requests  * New value is `vnd.porta-webhook-api.v1`  ## 2023-06-22  * Added webhook test endpoints for sandbox environment:  * `POST /supplier/integration-tests/book`  * `POST /supplier/integration-tests/cancel-booking`  * `POST /supplier/integration-tests/hold`  ## 2023-06-09  * Added endpoint `PATCH /supplier/catalog/experiences/{experience_id}` * Added `archived` property to *Experience model*  * Archived experiences are no longer for sale  ## 2023-05-04  * Removed `supplier-code` header parameter from all endpoints * Removed exhaust vent that exposed the Core  ## 2023-04-20  **Booking confirmation request**  * Added `tuimm_booking_id` property  * Human-friendly Musement booking ID  **Vendors**  * Added `Vendor` model  * Used to categorize experiences by different sources, partners or channels * Added two endpoints:  * `GET /supplier/vendors`  * `POST /supplier/vendors` * Added `vendor_id` property to *Experience model*  ## 2023-03-23  **Experience model**  * Removed `content` and `media` properties 

The version of the OpenAPI document: 1.0.0
Contact: porta@tui.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::WebhooksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhooksApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::WebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhooksApi' do
    it 'should create an instance of WebhooksApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::WebhooksApi)
    end
  end

  # unit tests for delete_booking
  # Cancel booking
  # This request is usually sent went a customer requests to cancel a booking. A cancellation request may also be sent when a booking confirmation request times out.  **Request endpoint**: &#x60;DELETE {supplier_url}/booking&#x60; 
  # @param accept_version The version of PORTA for the webhook request.
  # @param x_webhook_key The key which allows the PORTA to access the supplier&#39;s webhook service.
  # @param [Hash] opts the optional parameters
  # @option opts [PostIntegrationTestsCancelBookingRequest] :post_integration_tests_cancel_booking_request 
  # @return [nil]
  describe 'delete_booking test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_health
  # Check webhook health
  # This request is sent approximately every five minutes to check the status of the supplier&#39;s webhook endpoint.  **Request endpoint**: &#x60;GET {supplier_url}/health&#x60; 
  # @param accept_version The version of PORTA for the webhook request.
  # @param x_webhook_key The key which allows the PORTA to access the supplier&#39;s webhook service.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_health test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_booking
  # Confirm booking
  # This request is sent after a customer has successfully created an order for the Musement catalog.  **Request endpoint**: &#x60;POST {supplier_url}/booking&#x60; 
  # @param accept_version The version of PORTA for the webhook request.
  # @param x_webhook_key The key which allows the PORTA to access the supplier&#39;s webhook service.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Object]
  describe 'post_booking test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_hold
  # Hold availability for booking
  # A hold availability request is sent when a customer adds an item to their cart before payment. A successful response means the availability is guaranteed for the &#x60;hold_duration&#x60; value decided in the supplier&#39;s contract.  **Request endpoint**: &#x60;POST {supplier_url}/hold&#x60; 
  # @param accept_version The version of PORTA for the webhook request.
  # @param x_webhook_key The key which allows the PORTA to access the supplier&#39;s webhook service.
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Object]
  describe 'post_hold test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
